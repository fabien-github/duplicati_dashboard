{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "z8qxnDuGz"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 42,
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "z8qxnDuGz"
          },
          "refId": "A"
        }
      ],
      "title": "Last reported status",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "z8qxnDuGz"
      },
      "description": "over last 30 days",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Failure"
                },
                "1": {
                  "text": "Success"
                },
                "2": {
                  "text": "Warning"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "dark-red",
                "value": 0
              },
              {
                "color": "dark-green",
                "value": 1
              },
              {
                "color": "dark-yellow",
                "value": 2
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 0,
        "y": 1
      },
      "id": 8,
      "maxPerRow": 8,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "titleSize": 4,
          "valueSize": 40
        },
        "textMode": "value"
      },
      "pluginVersion": "9.2.3",
      "repeat": "Backup",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "z8qxnDuGz"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"influxdata/influxdb/schema\"\r\n\r\nfrom(bucket: v.defaultBucket)\r\n  |> range(start: -30d)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"duplicati\")\r\n  |> filter(fn: (r) => r[\"backup-name\"] == \"${Backup}\")\r\n  |> toString()\r\n  |> schema.fieldsAsCols()\r\n  |> keep(columns: [\"_time\", \"ParsedResult\"])\r\n  |> map(fn:(r) => ({ r with ParsedResult: if exists r.ParsedResult and r.ParsedResult == \"Success\" then int(v: 1) else if r.ParsedResult == \"Warning\" then int(v: 2) else int(v: 0) }))\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> last(column: \"ParsedResult\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "$Backup",
      "transformations": [
        {
          "id": "organize",
          "options": {}
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "z8qxnDuGz"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Backup started at"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dateTimeAsLocal"
              },
              {
                "id": "custom.width",
                "value": 202
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Backup ended at"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dateTimeAsLocal"
              },
              {
                "id": "custom.width",
                "value": 199
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Duration"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dthms"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Result"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": ""
                    },
                    {
                      "color": "green",
                      "value": ""
                    }
                  ]
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "": {
                        "text": ""
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Message"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 514
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Backup"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 241
              },
              {
                "id": "custom.filterable",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Result"
            },
            "properties": [
              {
                "id": "custom.filterable",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Source Size"
            },
            "properties": [
              {
                "id": "unit",
                "value": "bytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Report time"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dateTimeAsLocalNoDateIfToday"
              },
              {
                "id": "custom.width",
                "value": 193
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 16,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 4,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 5,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Report time"
          }
        ]
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "z8qxnDuGz"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"experimental\"\r\nimport \"strings\"\r\nfrom(bucket: \"telegraf\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"duplicati\")\r\n  |> toString()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({r with \"backup-name\": r[\"backup-name\"], \"BackupName\": string(v: r[\"backup-name\"])}))\r\n  |> keep(columns: [\"_time\", \"BackupName\", \"ParsedResult\", \"Message\", \"Duration\", \"BeginTime\", \"EndTime\", \"SizeOfExaminedFiles\"])\r\n  |> map(fn:(r) => ({ r with ParsedResult: if r.ParsedResult == \"Success\" then string(v: \"Success\") else if r.ParsedResult == \"Warning\" then string(v: \"Warning\") else string(v: \"Failure\") }))\r\n  |> map(fn:(r) => ({ r with Duration: if exists r.Duration then strings.substring(v: r.Duration, start: 0, end: 8) else string(v: \"\") }))\r\n  |> filter(fn: (r) => r[\"BackupName\"] =~ /^${Backup:pipe}/)",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Logs",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "BackupName": 1,
              "BeginTime": 6,
              "Duration": 5,
              "EndTime": 7,
              "Message": 4,
              "ParsedResult": 2,
              "SizeOfExaminedFiles": 3,
              "_time": 0
            },
            "renameByName": {
              "BeginTime": "Backup started at",
              "Duration": "",
              "EndTime": "Backup ended at",
              "ParsedResult": "Result",
              "SizeOfExaminedFiles": "Source Size",
              "_time": "Report time",
              "backup-name": "Backup"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "influxdb",
        "uid": "z8qxnDuGz"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 23
      },
      "id": 32,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "z8qxnDuGz"
          },
          "description": "over last 30 days",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 3,
            "x": 0,
            "y": 24
          },
          "id": 34,
          "maxPerRow": 8,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "center",
            "orientation": "vertical",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value_and_name"
          },
          "pluginVersion": "9.2.3",
          "repeat": "Backup",
          "repeatDirection": "h",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "z8qxnDuGz"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -30d)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"duplicati\")\r\n  |> filter(fn: (r) => r[\"backup-name\"] == \"${Backup}\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({ r with\r\n    _value: (r.AddedFolders - r.DeletedFolders)\r\n  }))\r\n  |> keep(columns: [\"_time\",\"_value\"])\r\n  |> rename(columns: {_value: \"Folders: \"})\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> last(column: \"_time\")",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "z8qxnDuGz"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -30d)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"duplicati\")\r\n  |> filter(fn: (r) => r[\"backup-name\"] =~ /^${Backup:pipe}/)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({ r with\r\n    _value: (r.AddedFiles - r.DeletedFiles)\r\n  }))\r\n  |> keep(columns: [\"_time\",\"_value\"])\r\n  |> rename(columns: {_value: \"Files: \"})\r\n  ",
              "refId": "B",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "z8qxnDuGz"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -30d)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"duplicati\")\r\n  |> filter(fn: (r) => r[\"backup-name\"] =~ /^${Backup:pipe}/)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({ r with\r\n    _value: (r.AddedSymlinks - r.DeletedSymlinks)\r\n  }))\r\n  |> keep(columns: [\"_time\",\"_value\"])\r\n  |> rename(columns: {_value: \"Symlinks: \"})\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> last(column: \"_time\")",
              "refId": "C",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "$Backup",
          "transformations": [],
          "type": "stat"
        }
      ],
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "z8qxnDuGz"
          },
          "refId": "A"
        }
      ],
      "title": "Last reported variations",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "influxdb",
        "uid": "z8qxnDuGz"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 24
      },
      "id": 6,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "z8qxnDuGz"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "displayMode": "auto",
                "filterable": false,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "SizeOfExaminedFiles"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "bytes"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "SizeOfOpenedFiles"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "bytes"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "SizeOfModifiedFiles"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "bytes"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "SizeOfAddedFiles"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "bytes"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Time"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "dateTimeAsLocalNoDateIfToday"
                  },
                  {
                    "id": "custom.width",
                    "value": 167
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "BeginTime"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 258
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "BeginTime"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "dateTimeAsIsoNoDateIfToday"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "EndTime"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "dateTimeAsLocalNoDateIfToday"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Message"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 300
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 25
          },
          "id": 2,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Time"
              }
            ]
          },
          "pluginVersion": "9.2.3",
          "repeat": "Backup",
          "repeatDirection": "v",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "z8qxnDuGz"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"duplicati\")\r\n  |> filter(fn: (r) => r[\"backup-name\"] =~ /^${Backup}/)\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /^${Measurement:pipe}/)\r\n  |> toString()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Stats : ${Backup}",
          "transformations": [
            {
              "id": "merge",
              "options": {}
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "AddedFiles": 10,
                  "AddedFolders": 11,
                  "AddedSymlinks": 12,
                  "BeginTime": 7,
                  "DeletedFiles": 17,
                  "DeletedFolders": 18,
                  "DeletedSymlinks": 19,
                  "Dryrun": 27,
                  "Duration": 9,
                  "EndTime": 8,
                  "ErrorsActualLength": 20,
                  "ExaminedFiles": 6,
                  "FilesWithError": 21,
                  "MainOperation": 28,
                  "Message": 2,
                  "MessagesActualLength": 22,
                  "ModifiedFiles": 14,
                  "ModifiedFolders": 15,
                  "ModifiedSymlinks": 16,
                  "NotProcessedFiles": 23,
                  "OpenedFiles": 24,
                  "ParsedResult": 1,
                  "PartialBackup": 29,
                  "SizeOfAddedFiles": 13,
                  "SizeOfExaminedFiles": 3,
                  "SizeOfModifiedFiles": 5,
                  "SizeOfOpenedFiles": 4,
                  "Time": 0,
                  "TooLargeFiles": 25,
                  "Version": 30,
                  "WarningsActualLength": 26
                },
                "renameByName": {}
              }
            }
          ],
          "type": "table"
        }
      ],
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "z8qxnDuGz"
          },
          "refId": "A"
        }
      ],
      "title": "Detailed stats",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "influxdb",
        "uid": "z8qxnDuGz"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 167,
      "panels": [
        {
          "alert": {
            "alertRuleTags": {},
            "conditions": [
              {
                "evaluator": {
                  "params": [
                    0.4
                  ],
                  "type": "lt"
                },
                "operator": {
                  "type": "and"
                },
                "query": {
                  "params": [
                    "A",
                    "5m",
                    "now"
                  ]
                },
                "reducer": {
                  "params": [],
                  "type": "last"
                },
                "type": "query"
              }
            ],
            "executionErrorState": "alerting",
            "for": "10m",
            "frequency": "1m",
            "handler": 1,
            "message": "One of your backups reported a failed state.",
            "name": "Duplicati backup",
            "noDataState": "keep_state",
            "notifications": [
              {
                "uid": "notifier_duplicati"
              }
            ]
          },
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": {
            "type": "influxdb",
            "uid": "z8qxnDuGz"
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 24,
            "x": 0,
            "y": 26
          },
          "hiddenSeries": false,
          "id": 169,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": false,
          "linewidth": 1,
          "nullPointMode": "connected",
          "options": {
            "alertThreshold": false
          },
          "percentage": false,
          "pluginVersion": "9.2.3",
          "pointradius": 0.5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "z8qxnDuGz"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "orderByTime": "ASC",
              "policy": "default",
              "query": "import \"influxdata/influxdb/schema\"\r\n\r\ndata = from(bucket: v.defaultBucket)\r\n    |> range(start: -30d)\r\n\t|> filter(fn: (r) =>\r\n\t\t(r[\"_measurement\"] == \"duplicati\"))\r\n    |> toString()\r\n    |> schema.fieldsAsCols()\r\n\t|> map(fn: (r) =>\r\n\t\t({r with ParsedResult: if exists r.ParsedResult and r.ParsedResult == \"Success\" then float(v: 1) else if r.ParsedResult == \"Warning\" then float(v: 0.5) else float(v: 0)}))\r\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"backup-name\"], valueColumn: \"ParsedResult\")\r\n    |> keep(fn: (column) => (column == \"_time\" or column !~ /^_.*/))\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n\t|> yield()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "thresholds": [
            {
              "colorMode": "critical",
              "fill": false,
              "line": false,
              "op": "lt",
              "value": 0.4,
              "visible": true
            }
          ],
          "timeRegions": [],
          "title": "Alerting graph",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transformations": [],
          "type": "graph",
          "xaxis": {
            "mode": "time",
            "show": false,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:157",
              "decimals": 0,
              "format": "none",
              "logBase": 1,
              "max": "1",
              "min": "0",
              "show": true
            },
            {
              "$$hashKey": "object:158",
              "format": "short",
              "logBase": 1,
              "show": true
            }
          ],
          "yaxis": {
            "align": false
          }
        }
      ],
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "z8qxnDuGz"
          },
          "refId": "A"
        }
      ],
      "title": "Alerting graph",
      "type": "row"
    }
  ],
  "refresh": "30s",
  "schemaVersion": 37,
  "style": "dark",
  "tags": [
    "Duplicati"
  ],
  "templating": {
    "list": [
      {
        "allValue": "",
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "influxdb",
          "uid": "z8qxnDuGz"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: -90d)\r\n  |> filter(fn: (r) => true)\r\n  |> toString()\r\n  |> group(columns: [\"backup-name\"])\r\n  |> distinct(column: \"backup-name\")\r\n  |> keep(columns: [\"_value\"])",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "Backup",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: -90d)\r\n  |> filter(fn: (r) => true)\r\n  |> toString()\r\n  |> group(columns: [\"backup-name\"])\r\n  |> distinct(column: \"backup-name\")\r\n  |> keep(columns: [\"_value\"])",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "z8qxnDuGz"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.measurementFieldKeys(\r\n  bucket: v.defaultBucket,\r\n  measurement: \"duplicati\"\r\n)\r\n",
        "hide": 2,
        "includeAll": true,
        "multi": false,
        "name": "Measurement",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.measurementFieldKeys(\r\n  bucket: v.defaultBucket,\r\n  measurement: \"duplicati\"\r\n)\r\n",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Duplicati Dashboard",
  "uid": "ltaGTeQDz672",
  "version": 1,
  "weekStart": ""
}
